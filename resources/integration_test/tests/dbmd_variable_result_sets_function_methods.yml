tests:
  # getFunctions(catalog, schemaPattern, functionNamePattern)
  - description: getFunctions_resultset_metadata
    db: integration_test
    meta_function: [ getFunctions, integration_test, null, '%' ]
    expected_sql_type: [ LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, INTEGER,
                         LONGVARCHAR ]
    expected_bson_type: [string, string, string, string, int, string]
    expected_catalog_name: [ '', '', '', '', '', '' ]
    expected_column_class_name: [ java.lang.String, java.lang.String, java.lang.String,
                                  java.lang.String, int, java.lang.String ]
    expected_column_label: [ FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME, REMARKS,
                             FUNCTION_TYPE, SPECIFIC_NAME ]
    expected_column_display_size: [ 0, 0, 0, 0, 10, 0 ]
    expected_precision: [ 0, 0, 0, 0, 10, 0 ]
    expected_scale: [ 0, 0, 0, 0, 0, 0 ]
    expected_schema_name: [ '', '', '', '', '', '' ]
    expected_is_auto_increment: [ false, false, false, false, false, false ]
    expected_is_case_sensitive: [ true, true, true, true, false, true ]
    expected_is_currency: [ false, false, false, false, false, false ]
    expected_is_definitely_writable: [ false, false, false, false, false, false ]
    #skip_reason: "SQL-669: incorrect column nullability"
    #expected_is_nullable: [ columnNoNulls, columnNoNulls, columnNullable, columnNoNulls, columnNoNulls, columnNoNulls ]
    expected_is_read_only: [ true, true, true, true, true, true ]
    expected_is_searchable: [ true, true, true, true, true, true ]
    expected_is_signed: [ false, false, false, false, true, false ]
    expected_is_writable: [ false, false, false, false, false, false ]

  # getFunctions(catalog, schemaPattern, functionNamePattern)
  - description: getFunctions_no_filter_returns_all_functions
    db: integration_test
    meta_function: [getFunctions, integration_test, null, '%']
    expected_result:
      - [def, null, BIT_LENGTH, returns length of string in bits, 1, BIT_LENGTH]
      - [def, null, CAST, converts the provided expression into a value of the specified
          type., 1, CAST]
      - [def, null, CHAR_LENGTH, returns length of string, 1, CHAR_LENGTH]
      - [def, null, COALESCE, 'returns the first non-null value in the list, or null
          if there are no non-null values.', 1, COALESCE]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, EXTRACT, returns the value of the specified unit from the provided
          date., 1, EXTRACT]
      - [def, null, LOWER, returns the provided string with all characters changed
          to lowercase., 1, LOWER]
      - [def, null, NULLIF, 'returns null if the two arguments are equal, and the
          first argument otherwise.', 1, NULLIF]
      - [def, null, OCTET_LENGTH, returns length of string in bytes, 1, OCTET_LENGTH]
      - [def, null, POSITION, returns the position of the first occurrence of substring
          substr in string str., 1, POSITION]
      - [def, null, SLICE, returns a slice of an array., 1, SLICE]
      - [def, null, SIZE, returns the size of an array., 1, SIZE]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, TRIM, returns the string str with all remstr prefixes and/or suffixes
          removed., 1, TRIM]
      - [def, null, TRIM, returns the string str with all remstr prefixes and/or suffixes
          removed., 1, TRIM]
      - [def, null, TRIM, returns the string str with all remstr prefixes and/or suffixes
          removed., 1, TRIM]
      - [def, null, UPPER, returns the provided string with all characters changed
          to uppercase., 1, UPPER]
    row_count: 19

  - description: getFunctions_partial_filter_with_wildcard_substrings_returns_matching_functions
    db: integration_test
    meta_function: [getFunctions, integration_test, null, '%S%']
    expected_result:
      - [def, null, CAST, converts the provided expression into a value of the specified
          type., 1, CAST]
      - [def, null, COALESCE, 'returns the first non-null value in the list, or null
          if there are no non-null values.', 1, COALESCE]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, POSITION, returns the position of the first occurrence of substring
          substr in string str., 1, POSITION]
      - [def, null, SLICE, returns a slice of an array., 1, SLICE]
      - [def, null, SIZE, returns the size of an array., 1, SIZE]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
    row_count: 9

  - description: getFunctions_partial_filter_with_wildcard_characters_returns_matching_functions
    db: integration_test
    meta_function: [getFunctions, integration_test, null, SUBS_RIN_]
    expected_result:
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
    row_count: 2

  - description: getFunctions_exact_filter_returns_matching_functions
    db: integration_test
    meta_function: [getFunctions, integration_test, null, SUBSTRING]
    expected_result:
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
    row_count: 2

  # getFunctionColumns(catalog, schemaPattern, functionNamePattern, columnNamePattern)
  - description: getFunctionColumns_resultset_metadata_validation
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "%", "%"]
    expected_sql_type: [ LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, INTEGER,
                         INTEGER, LONGVARCHAR, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, LONGVARCHAR,
                         INTEGER, INTEGER, LONGVARCHAR, LONGVARCHAR ]
    expected_bson_type: [ string, string, string, string, int, int, string, int, int,
                          int, int, int, string, int, int, string, string ]
    expected_catalog_name: [ '', '', '', '', '', '', '', '', '', '', '', '', '', '',
                           '', '', '' ]
    expected_column_class_name: [ java.lang.String, java.lang.String, java.lang.String,
                                  java.lang.String, int, int, java.lang.String, int, int, int, int, int, java.lang.String,
                                  int, int, java.lang.String, java.lang.String ]
    expected_column_label: [ FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME, COLUMN_NAME,
                             COLUMN_TYPE, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, SCALE, RADIX, NULLABLE,
                             REMARKS, CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE, SPECIFIC_NAME ]
    expected_column_display_size: [ 0, 0, 0, 0, 10, 10, 0, 10, 10, 10, 10, 10, 0, 10,
                                    10, 0, 0 ]
    expected_precision: [ 0, 0, 0, 0, 10, 10, 0, 10, 10, 10, 10, 10, 0, 10, 10, 0,
                          0 ]
    expected_scale: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    expected_schema_name: [ '', '', '', '', '', '', '', '', '', '', '', '', '', '',
                            '', '', '' ]
    expected_is_auto_increment: [ false, false, false, false, false, false, false,
                                  false, false, false, false, false, false, false, false, false, false ]
    expected_is_case_sensitive: [ true, true, true, true, false, false, true, false,
                                  false, false, false, false, true, false, false, true, true ]
    expected_is_currency: [ false, false, false, false, false, false, false, false,
                            false, false, false, false, false, false, false, false, false ]
    expected_is_definitely_writable: [ false, false, false, false, false, false, false,
                                       false, false, false, false, false, false, false, false, false, false ]
    #skip_reason: "SQL-669: incorrect column nullability"
    #expected_is_nullable: [ columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls,
    #                        columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls,
    #                        columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls, columnNoNulls,
    #                            columnNoNulls ]
    expected_is_read_only: [ true, true, true, true, true, true, true, true, true,
                             true, true, true, true, true, true, true, true ]
    expected_is_searchable: [ true, true, true, true, true, true, true, true, true,
                              true, true, true, true, true, true, true, true ]
    expected_is_signed: [ false, false, false, false, true, true, false, true, true,
                          true, true, true, false, true, true, false, false ]
    expected_is_writable: [ false, false, false, false, false, false, false, false,
                            false, false, false, false, false, false, false, false, false ]

  # getFunctionColumns(catalog, schemaPattern, functionNamePattern, columnNamePattern)
  - description: getFunctionColumns no function or column filters returns all args
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "%", "%"]
    expected_result:
      - [ def, null, BIT_LENGTH, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns length
                                                                       of string in bits, 0, 1, 'YES', BIT_LENGTH ]
      - [ def, null, BIT_LENGTH, argReturn, 4, 4, long, 19, 8, 0, 8, 1, returns length
                                                                          of string in bits, 8, 1, 'YES', BIT_LENGTH ]
      - [ def, null, CAST, arg1, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 1, 'YES', CAST ]
      - [ def, null, CAST, arg2, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 2, 'YES', CAST ]
      - [ def, null, CAST, arg3, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 3, 'YES', CAST ]
      - [ def, null, CAST, arg4, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 4, 'YES', CAST ]
      - [ def, null, CAST, argReturn, 4, 0, null, 0, 0, 0, 0, 1, converts the provided
                                                                   expression into a value of the specified type., 0, 4, 'YES', CAST ]
      - [ def, null, CHAR_LENGTH, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns length
                                                                        of string, 0, 1, 'YES', CHAR_LENGTH ]
      - [ def, null, CHAR_LENGTH, argReturn, 4, 4, long, 19, 8, 0, 8, 1, returns length
                                                                           of string, 8, 1, 'YES', CHAR_LENGTH ]
      - [ def, null, COALESCE, arg1, 1, 0, null, 0, 0, 0, 0, 1, 'returns the first
          non-null value in the list, or null if there are no non-null values.', 0,
          1, 'YES', COALESCE ]
      - [ def, null, COALESCE, argReturn, 4, 0, null, 0, 0, 0, 0, 1, 'returns the first
          non-null value in the list, or null if there are no non-null values.', 0,
          1, 'YES', COALESCE ]
      - [ def, null, CURRENT_TIMESTAMP, arg1, 1, 0, '', 0, 0, 0, 0, 1, returns the
                                                                         current date and time., 0, 1, 'YES', CURRENT_TIMESTAMP ]
      - [ def, null, CURRENT_TIMESTAMP, argReturn, 4, 93, date, 0, 8, 0, 8, 1, returns
                                                                                 the current date and time., 8, 1, 'YES', CURRENT_TIMESTAMP ]
      - [ def, null, CURRENT_TIMESTAMP, arg1, 1, 4, int, 10, 4, 0, 4, 1, returns the
                                                                           current date and time., 4, 1, 'YES', CURRENT_TIMESTAMP ]
      - [ def, null, CURRENT_TIMESTAMP, argReturn, 4, 93, date, 0, 8, 0, 8, 1, returns
                                                                                 the current date and time., 8, 1, 'YES', CURRENT_TIMESTAMP ]
      - [ def, null, EXTRACT, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the value
                                                                    of the specified unit from the provided date., 0, 1, 'YES', EXTRACT ]
      - [ def, null, EXTRACT, arg2, 1, 93, date, 0, 8, 0, 8, 1, returns the value of
                                                                  the specified unit from the provided date., 8, 2, 'YES', EXTRACT ]
      - [ def, null, EXTRACT, argReturn, 4, 4, long, 19, 8, 0, 8, 1, returns the value
                                                                       of the specified unit from the provided date., 8, 2, 'YES', EXTRACT ]
      - [ def, null, LOWER, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the provided
                                                                  string with all characters changed to lowercase., 0, 1, 'YES', LOWER ]
      - [ def, null, LOWER, argReturn, 4, -1, string, 0, 0, 0, 0, 1, returns the provided
                                                                       string with all characters changed to lowercase., 0, 1, 'YES', LOWER ]
      - [ def, null, NULLIF, arg1, 1, 0, null, 0, 0, 0, 0, 1, 'returns null if the
          two arguments are equal, and the first argument otherwise.', 0, 1, 'YES',
          NULLIF ]
      - [ def, null, NULLIF, arg2, 1, 0, null, 0, 0, 0, 0, 1, 'returns null if the
          two arguments are equal, and the first argument otherwise.', 0, 2, 'YES',
          NULLIF ]
      - [ def, null, NULLIF, argReturn, 4, 0, null, 0, 0, 0, 0, 1, 'returns null if
          the two arguments are equal, and the first argument otherwise.', 0, 2, 'YES',
          NULLIF ]
      - [ def, null, OCTET_LENGTH, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns length
                                                                         of string in bytes, 0, 1, 'YES', OCTET_LENGTH ]
      - [ def, null, OCTET_LENGTH, argReturn, 4, 4, long, 19, 8, 0, 8, 1, returns length
                                                                            of string in bytes, 8, 1, 'YES', OCTET_LENGTH ]
      - [ def, null, POSITION, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the position
                                                                     of the first occurrence of substring substr in string str., 0, 1, 'YES',
          POSITION ]
      - [ def, null, POSITION, arg2, 1, -1, string, 0, 0, 0, 0, 1, returns the position
                                                                     of the first occurrence of substring substr in string str., 0, 2, 'YES',
          POSITION ]
      - [ def, null, POSITION, argReturn, 4, 4, long, 19, 8, 0, 8, 1, returns the position
                                                                        of the first occurrence of substring substr in string str., 8, 2, 'YES',
          POSITION ]
      - [ def, null, SLICE, arg1, 1, 0, array, 0, 0, 0, 0, 1, returns a slice of an
                                                                array., 0, 1, 'YES', SLICE ]
      - [ def, null, SLICE, arg2, 1, 4, int, 10, 4, 0, 4, 1, returns a slice of an
                                                               array., 4, 2, 'YES', SLICE ]
      - [ def, null, SLICE, arg3, 1, 4, int, 10, 4, 0, 4, 1, returns a slice of an
                                                               array., 4, 3, 'YES', SLICE ]
      - [ def, null, SLICE, argReturn, 4, 0, null, 0, 0, 0, 0, 1, returns a slice of
                                                                    an array., 0, 3, 'YES', SLICE ]
      - [ def, null, SIZE, arg1, 1, 0, array, 0, 0, 0, 0, 1, returns the size of an
                                                               array., 0, 1, 'YES', SIZE ]
      - [ def, null, SIZE, argReturn, 4, 2, numeric, 34, 16, 34, 16, 1, returns the
                                                                          size of an array., 16, 1, 'YES', SIZE ]
      - [ def, null, SUBSTRING, arg1, 1, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                      from a string, 0, 1, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg2, 1, 4, long, 19, 8, 0, 8, 1, takes a substring
                                                                    from a string, 8, 2, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, argReturn, 4, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                           from a string, 0, 2, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg1, 1, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                      from a string, 0, 1, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg2, 1, 4, long, 19, 8, 0, 8, 1, takes a substring
                                                                    from a string, 8, 2, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg3, 1, 4, long, 19, 8, 0, 8, 1, takes a substring
                                                                    from a string, 8, 3, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, argReturn, 4, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                           from a string, 0, 3, 'YES', SUBSTRING ]
      - [ def, null, TRIM, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the string str
                                                                 with all remstr prefixes and/or suffixes removed., 0, 1, 'YES', TRIM ]
      - [ def, null, TRIM, argReturn, 4, -1, string, 0, 0, 0, 0, 1, returns the string
                                                                      str with all remstr prefixes and/or suffixes removed., 0, 1, 'YES', TRIM ]
      - [ def, null, TRIM, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the string str
                                                                 with all remstr prefixes and/or suffixes removed., 0, 1, 'YES', TRIM ]
      - [ def, null, TRIM, arg2, 1, -1, string, 0, 0, 0, 0, 1, returns the string str
                                                                 with all remstr prefixes and/or suffixes removed., 0, 2, 'YES', TRIM ]
      - [ def, null, TRIM, argReturn, 4, -1, string, 0, 0, 0, 0, 1, returns the string
                                                                      str with all remstr prefixes and/or suffixes removed., 0, 2, 'YES', TRIM ]
      - [ def, null, TRIM, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the string str
                                                                 with all remstr prefixes and/or suffixes removed., 0, 1, 'YES', TRIM ]
      - [ def, null, TRIM, arg2, 1, -1, string, 0, 0, 0, 0, 1, returns the string str
                                                                 with all remstr prefixes and/or suffixes removed., 0, 2, 'YES', TRIM ]
      - [ def, null, TRIM, arg3, 1, -1, string, 0, 0, 0, 0, 1, returns the string str
                                                                 with all remstr prefixes and/or suffixes removed., 0, 3, 'YES', TRIM ]
      - [ def, null, TRIM, argReturn, 4, -1, string, 0, 0, 0, 0, 1, returns the string
                                                                      str with all remstr prefixes and/or suffixes removed., 0, 3, 'YES', TRIM ]
      - [ def, null, UPPER, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the provided
                                                                  string with all characters changed to uppercase., 0, 1, 'YES', UPPER ]
      - [ def, null, UPPER, argReturn, 4, -1, string, 0, 0, 0, 0, 1, returns the provided
                                                                       string with all characters changed to uppercase., 0, 1, 'YES', UPPER ]
    row_count: 52

  - description: getFunctionColumns partial function and column filters returns matching args
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "%S%", "arg_"]
    expected_result:
      - [ def, null, CAST, arg1, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 1, 'YES', CAST ]
      - [ def, null, CAST, arg2, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 2, 'YES', CAST ]
      - [ def, null, CAST, arg3, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 3, 'YES', CAST ]
      - [ def, null, CAST, arg4, 1, 0, null, 0, 0, 0, 0, 1, converts the provided expression
                                                              into a value of the specified type., 0, 4, 'YES', CAST ]
      - [ def, null, COALESCE, arg1, 1, 0, null, 0, 0, 0, 0, 1, 'returns the first
          non-null value in the list, or null if there are no non-null values.', 0,
          1, 'YES', COALESCE ]
      - [ def, null, CURRENT_TIMESTAMP, arg1, 1, 0, '', 0, 0, 0, 0, 1, returns the
                                                                         current date and time., 0, 1, 'YES', CURRENT_TIMESTAMP ]
      - [ def, null, CURRENT_TIMESTAMP, arg1, 1, 4, int, 10, 4, 0, 4, 1, returns the
                                                                           current date and time., 4, 1, 'YES', CURRENT_TIMESTAMP ]
      - [ def, null, POSITION, arg1, 1, -1, string, 0, 0, 0, 0, 1, returns the position
                                                                     of the first occurrence of substring substr in string str., 0, 1, 'YES',
          POSITION ]
      - [ def, null, POSITION, arg2, 1, -1, string, 0, 0, 0, 0, 1, returns the position
                                                                     of the first occurrence of substring substr in string str., 0, 2, 'YES',
          POSITION ]
      - [ def, null, SLICE, arg1, 1, 0, array, 0, 0, 0, 0, 1, returns a slice of an
                                                                array., 0, 1, 'YES', SLICE ]
      - [ def, null, SLICE, arg2, 1, 4, int, 10, 4, 0, 4, 1, returns a slice of an
                                                               array., 4, 2, 'YES', SLICE ]
      - [ def, null, SLICE, arg3, 1, 4, int, 10, 4, 0, 4, 1, returns a slice of an
                                                               array., 4, 3, 'YES', SLICE ]
      - [ def, null, SIZE, arg1, 1, 0, array, 0, 0, 0, 0, 1, returns the size of an
                                                               array., 0, 1, 'YES', SIZE ]
      - [ def, null, SUBSTRING, arg1, 1, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                      from a string, 0, 1, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg2, 1, 4, long, 19, 8, 0, 8, 1, takes a substring
                                                                    from a string, 8, 2, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg1, 1, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                      from a string, 0, 1, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg2, 1, 4, long, 19, 8, 0, 8, 1, takes a substring
                                                                    from a string, 8, 2, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg3, 1, 4, long, 19, 8, 0, 8, 1, takes a substring
                                                                    from a string, 8, 3, 'YES', SUBSTRING ]
    row_count: 18

  - description: getFunctionColumns exact function and column filters returns matching args
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "SUBSTRING", "arg1"]
    expected_result:
      - [ def, null, SUBSTRING, arg1, 1, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                      from a string, 0, 1, 'YES', SUBSTRING ]
      - [ def, null, SUBSTRING, arg1, 1, -1, string, 0, 0, 0, 0, 1, takes a substring
                                                                      from a string, 0, 1, 'YES', SUBSTRING ]
    row_count: 2
