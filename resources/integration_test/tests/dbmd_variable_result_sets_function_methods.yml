tests:
  # getFunctions(catalog, schemaPattern, functionNamePattern)
  - description: getFunctions_no_filter_returns_all_functions
    db: integration_test
    skip_reason: "SQL-669: incorrect column nullability"
    meta_function: [getFunctions, integration_test, null, '%']
    expected_result:
      - [def, null, BIT_LENGTH, returns length of string in bits, 1, BIT_LENGTH]
      - [def, null, CAST, converts the provided expression into a value of the specified
          type., 1, CAST]
      - [def, null, CHAR_LENGTH, returns length of string, 1, CHAR_LENGTH]
      - [def, null, COALESCE, 'returns the first non-null value in the list, or null
          if there are no non-null values.', 1, COALESCE]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, EXTRACT, returns the value of the specified unit from the provided
          date., 1, EXTRACT]
      - [def, null, LOWER, returns the provided string with all characters changed
          to lowercase., 1, LOWER]
      - [def, null, NULLIF, 'returns null if the two arguments are equal, and the
          first argument otherwise.', 1, NULLIF]
      - [def, null, OCTET_LENGTH, returns length of string in bytes, 1, OCTET_LENGTH]
      - [def, null, POSITION, returns the position of the first occurrence of substring
          substr in string str., 1, POSITION]
      - [def, null, SLICE, returns a slice of an array., 1, SLICE]
      - [def, null, SIZE, returns the size of an array., 1, SIZE]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, TRIM, returns the string str with all remstr prefixes and/or suffixes
          removed., 1, TRIM]
      - [def, null, TRIM, returns the string str with all remstr prefixes and/or suffixes
          removed., 1, TRIM]
      - [def, null, TRIM, returns the string str with all remstr prefixes and/or suffixes
          removed., 1, TRIM]
      - [def, null, UPPER, returns the provided string with all characters changed
          to uppercase., 1, UPPER]
    row_count: 19
    expected_sql_type: [LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, INTEGER,
                        LONGVARCHAR]
    expected_catalog_name: ['', '', '', '', '', '']
    expected_column_class_name: [java.lang.String, java.lang.String, java.lang.String,
                                 java.lang.String, int, java.lang.String]
    expected_column_label: [FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME, REMARKS,
                            FUNCTION_TYPE, SPECIFIC_NAME]
    expected_column_display_size: [0, 0, 0, 0, 10, 0]
    expected_precision: [0, 0, 0, 0, 10, 0]
    expected_scale: [0, 0, 0, 0, 0, 0]
    expected_schema_name: ['', '', '', '', '', '']
    expected_is_auto_increment: [false, false, false, false, false, false]
    expected_is_case_sensitive: [true, true, true, true, false, true]
    expected_is_currency: [false, false, false, false, false, false]
    expected_is_definitely_writable: [false, false, false, false, false, false]
    expected_is_nullable: [columnNoNulls, columnNoNulls, columnNullable, columnNoNulls,
                           columnNoNulls, columnNoNulls]
    expected_is_read_only: [true, true, true, true, true, true]
    expected_is_searchable: [true, true, true, true, true, true]
    expected_is_signed: [false, false, false, false, true, false]
    expected_is_writable: [false, false, false, false, false, false]

  - description: getFunctions_partial_filter_with_wildcard_substrings_returns_matching_functions
    db: integration_test
    skip_reason: "SQL-669: incorrect column nullability"
    meta_function: [getFunctions, integration_test, null, '%S%']
    expected_result:
      - [def, null, CAST, converts the provided expression into a value of the specified
          type., 1, CAST]
      - [def, null, COALESCE, 'returns the first non-null value in the list, or null
          if there are no non-null values.', 1, COALESCE]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, CURRENT_TIMESTAMP, returns the current date and time., 1, CURRENT_TIMESTAMP]
      - [def, null, POSITION, returns the position of the first occurrence of substring
          substr in string str., 1, POSITION]
      - [def, null, SLICE, returns a slice of an array., 1, SLICE]
      - [def, null, SIZE, returns the size of an array., 1, SIZE]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
    row_count: 9
    expected_sql_type: [LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, INTEGER,
                        LONGVARCHAR]
    expected_catalog_name: ['', '', '', '', '', '']
    expected_column_class_name: [java.lang.String, java.lang.String, java.lang.String,
                                 java.lang.String, int, java.lang.String]
    expected_column_label: [FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME, REMARKS,
      FUNCTION_TYPE, SPECIFIC_NAME]
    expected_column_display_size: [0, 0, 0, 0, 10, 0]
    expected_precision: [0, 0, 0, 0, 10, 0]
    expected_scale: [0, 0, 0, 0, 0, 0]
    expected_schema_name: ['', '', '', '', '', '']
    expected_is_auto_increment: [false, false, false, false, false, false]
    expected_is_case_sensitive: [true, true, true, true, false, true]
    expected_is_currency: [false, false, false, false, false, false]
    expected_is_definitely_writable: [false, false, false, false, false, false]
    expected_is_nullable: [columnNoNulls, columnNoNulls, columnNullable, columnNoNulls,
                           columnNoNulls, columnNoNulls]
    expected_is_read_only: [true, true, true, true, true, true]
    expected_is_searchable: [true, true, true, true, true, true]
    expected_is_signed: [false, false, false, false, true, false]
    expected_is_writable: [false, false, false, false, false, false]

  - description: getFunctions_partial_filter_with_wildcard_characters_returns_matching_functions
    db: integration_test
    skip_reason: "SQL-669: incorrect column nullability"
    meta_function: [getFunctions, integration_test, null, SUBS_RIN_]
    expected_result:
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
    row_count: 2
    expected_sql_type: [LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, INTEGER,
      LONGVARCHAR]
    expected_catalog_name: ['', '', '', '', '', '']
    expected_column_class_name: [java.lang.String, java.lang.String, java.lang.String,
      java.lang.String, int, java.lang.String]
    expected_column_label: [FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME, REMARKS,
      FUNCTION_TYPE, SPECIFIC_NAME]
    expected_column_display_size: [0, 0, 0, 0, 10, 0]
    expected_precision: [0, 0, 0, 0, 10, 0]
    expected_scale: [0, 0, 0, 0, 0, 0]
    expected_schema_name: ['', '', '', '', '', '']
    expected_is_auto_increment: [false, false, false, false, false, false]
    expected_is_case_sensitive: [true, true, true, true, false, true]
    expected_is_currency: [false, false, false, false, false, false]
    expected_is_definitely_writable: [false, false, false, false, false, false]
    expected_is_nullable: [columnNoNulls, columnNoNulls, columnNullable, columnNoNulls,
                           columnNoNulls, columnNoNulls]
    expected_is_read_only: [true, true, true, true, true, true]
    expected_is_searchable: [true, true, true, true, true, true]
    expected_is_signed: [false, false, false, false, true, false]
    expected_is_writable: [false, false, false, false, false, false]

  - description: getFunctions_exact_filter_returns_matching_functions
    db: integration_test
    skip_reason: "SQL-669: incorrect column nullability"
    meta_function: [getFunctions, integration_test, null, SUBSTRING]
    expected_result:
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
      - [def, null, SUBSTRING, takes a substring from a string, 1, SUBSTRING]
    row_count: 2
    expected_sql_type: [LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, LONGVARCHAR, INTEGER,
      LONGVARCHAR]
    expected_catalog_name: ['', '', '', '', '', '']
    expected_column_class_name: [java.lang.String, java.lang.String, java.lang.String,
      java.lang.String, int, java.lang.String]
    expected_column_label: [FUNCTION_CAT, FUNCTION_SCHEM, FUNCTION_NAME, REMARKS,
      FUNCTION_TYPE, SPECIFIC_NAME]
    expected_column_display_size: [0, 0, 0, 0, 10, 0]
    expected_precision: [0, 0, 0, 0, 10, 0]
    expected_scale: [0, 0, 0, 0, 0, 0]
    expected_schema_name: ['', '', '', '', '', '']
    expected_is_auto_increment: [false, false, false, false, false, false]
    expected_is_case_sensitive: [true, true, true, true, false, true]
    expected_is_currency: [false, false, false, false, false, false]
    expected_is_definitely_writable: [false, false, false, false, false, false]
    expected_is_nullable: [columnNoNulls, columnNoNulls, columnNullable, columnNoNulls,
                           columnNoNulls, columnNoNulls]
    expected_is_read_only: [true, true, true, true, true, true]
    expected_is_searchable: [true, true, true, true, true, true]
    expected_is_signed: [false, false, false, false, true, false]
    expected_is_writable: [false, false, false, false, false, false]

  # getFunctionColumns(catalog, schemaPattern, functionNamePattern, columnNamePattern)
  - description: getFunctionColumns no function or column filters returns all args
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "%", "%"]
    skip_reason: "SQL-667: getFunctionColumns throws null pointer exceptions"

  - description: getFunctionColumns partial function and column filters returns matching args
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "%S%", "arg_"]
    skip_reason: "SQL-667: getFunctionColumns throws null pointer exceptions"

  - description: getFunctionColumns exact function and column filters returns matching args
    db: integration_test
    meta_function: ["getFunctionColumns", "integration_test", null, "SUBSTRING", "arg1"]
    skip_reason: "SQL-667: getFunctionColumns throws null pointer exceptions"
