allprojects {

    task publishMaven {
        group = 'publishing'
        if (version.endsWith('-SNAPSHOT')) {
            description = 'Publishes snapshots to Sonatype'
            dependsOn ':publishToSonatype'
        } else {
            description = 'Publishes a release and uploads to Sonatype / Maven Central'
            def (boolean passed, String err) = checkReleaseConditions()
            if (passed && project.name == rootProject.name) {
                dependsOn ':closeAndReleaseRepository'
                dependsOn ':publishToSonatype'
                // Make sure we publish to staging first
                project.tasks.getByName('publishToSonatype').finalizedBy(
                        project.tasks.getByName('closeAndReleaseRepository'),
                )
            }
        }
    }

    publishMaven.doFirst {
        def (boolean passed, String err) = checkReleaseConditions()
        if (!passed) {
            throw new GradleException(err)
        } else {
            println("Publishing: ${project.name} : ${project.gitVersion}")
        }
    }
}

def checkReleaseConditions() {
    if (!version.endsWith('-SNAPSHOT')) {
        if (project.gitVersion != version) {
            def cause = """
                | Version mismatch:
                | =================
                |
                | $version != $gitVersion
                |
                | The project version does not match the git tag.
                |""".stripMargin()
            return [false, cause]
        } else if (!project.gitLastComment.equals("BUMP v" + version)) {
            def cause = """
                | git comment for version bump is not valid
                | =================
                |
                | Invalid comment: ${project.gitLastComment}
                | should be: BUMP v$version
                |""".stripMargin()
            return [false, cause]
        }
    }
    return [true, null]
}
